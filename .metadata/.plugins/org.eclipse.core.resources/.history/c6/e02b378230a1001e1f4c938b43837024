package ar.com.sistema.secundario.dao.impl;

import java.util.List;

import ar.com.sistema.secundario.dao.AlumnoDAO;
import ar.com.sistema.secundario.modelo.Alumno;
import ar.com.sistema.secundario.utils.Nivel;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.List;
import java.util.ArrayList;


public final class AlumnoDAOImpl implements AlumnoDAO{
	private Connection conn;
	
	public AlumnoDAOImpl (Connection conn) {
		this.conn  = conn;
	}
	
	@Override
	public Boolean insertRow(Alumno object) {
		String query = "INSERT INTO alumno (dni,nombre,apellido,edad,nivel) VALUES (?,?,?,?,?)";
		try(PreparedStatement ps = conn.prepareStatement(query)){
			ps.executeUpdate();
		}catch(SQLException ex) {
			ex.printStackTrace();
		}
		return true;
	}

	@Override
	public List<Alumno> getAllRows() {
		String query ="SELECT * FROM alumno";
		List<Alumno> listStudents = new ArrayList<Alumno>();
		
		try(PreparedStatement ps=conn.prepareStatement(query)){
			ResultSet rs = ps.executeQuery();
			
			while(rs.next()) {
				Nivel level = getLevelOfAStudent(rs.getString(5));
				listStudents.add(new Alumno(rs.getInt(1),rs.getString(2),rs.getString(3),rs.getInt(4)));
			}
			
		} catch(SQLException ex) {
			ex.printStackTrace();
		}
		
		return listStudents;
	}

	private Nivel getLevelOfAStudent(String string) {
		Nivel levelsAllowed[] = Nivel.values();
		
		for(Nivel level : levelsAllowed) 
			if(level.name().equals(string))
				return level;
		throw RuntimeException("Nivel no existente");
	}

	@Override
	public Alumno getRowSpecificById(Integer id) {
		
		return null;
	}

	@Override
	public Boolean updateRowById(Integer id) {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public Boolean deleteRowById(Integer id) {
		// TODO Auto-generated method stub
		return null;
	}

}
